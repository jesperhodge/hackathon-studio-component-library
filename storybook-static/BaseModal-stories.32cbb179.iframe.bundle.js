"use strict";(self.webpackChunkopenedx_studio_component_library=self.webpackChunkopenedx_studio_component_library||[]).push([[334],{"./stories/BaseModal.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>BaseModal_stories});var react=__webpack_require__("./node_modules/react/index.js"),ModalDialog=__webpack_require__("./node_modules/@edx/paragon/dist/Modal/ModalDialog.js"),ActionRow=__webpack_require__("./node_modules/@edx/paragon/dist/ActionRow/index.js"),message=__webpack_require__("./node_modules/react-intl/lib/src/components/message.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js");const BaseModal_messages=(0,__webpack_require__("./node_modules/react-intl/lib/index.js").vU)({cancelButtonLabel:{id:"authoring.baseModal.cancelButtonLabel",defaultMessage:"Cancel",description:"Label for cancel button."}});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const BaseModal=({isOpen,close,title,children,confirmAction,footerAction,size})=>(0,jsx_runtime.jsxs)(ModalDialog.Z,{isOpen,onClose:close,size,variant:"default",hasCloseButton:!0,isFullscreenOnMobile:!0,isFullscreenScroll:!0,children:[(0,jsx_runtime.jsx)(ModalDialog.Z.Header,{children:(0,jsx_runtime.jsx)(ModalDialog.Z.Title,{children:title})}),(0,jsx_runtime.jsx)(ModalDialog.Z.Body,{children}),(0,jsx_runtime.jsx)(ModalDialog.Z.Footer,{children:(0,jsx_runtime.jsxs)(ActionRow.Z,{children:[footerAction,(0,jsx_runtime.jsx)(ActionRow.Z.Spacer,{}),(0,jsx_runtime.jsx)(ModalDialog.Z.CloseButton,{variant:"tertiary",onClick:close,children:(0,jsx_runtime.jsx)(message.Z,{...BaseModal_messages.cancelButtonLabel})}),confirmAction]})})]});BaseModal.displayName="BaseModal",BaseModal.defaultProps={footerAction:null,size:"lg"},BaseModal.propTypes={isOpen:prop_types.bool.isRequired,close:prop_types.func.isRequired,title:prop_types.node.isRequired,children:prop_types.node.isRequired,confirmAction:prop_types.node.isRequired,footerAction:prop_types.node,size:prop_types.string};try{BaseModal.displayName="BaseModal",BaseModal.__docgenInfo={description:"",displayName:"BaseModal",props:{isOpen:{defaultValue:null,description:"",name:"isOpen",required:!0,type:{name:"boolean"}},close:{defaultValue:null,description:"",name:"close",required:!0,type:{name:"() => any"}},title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"ReactNode"}},confirmAction:{defaultValue:null,description:"",name:"confirmAction",required:!0,type:{name:"ReactNode"}},footerAction:{defaultValue:{value:"null"},description:"",name:"footerAction",required:!1,type:{name:"ReactNode"}},size:{defaultValue:{value:"lg"},description:"",name:"size",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/BaseModal/index.tsx#BaseModal"]={docgenInfo:BaseModal.__docgenInfo,name:"BaseModal",path:"src/components/BaseModal/index.tsx#BaseModal"})}catch(__react_docgen_typescript_loader_error){}const BaseModal_stories={title:"Components/BaseModal",component:BaseModal,tags:["autodocs"]},Primary={render:args=>{const[open,setOpen]=(0,react.useState)(!1);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("button",{onClick:()=>{setOpen(!open)},children:"Toggle Modal"}),(0,jsx_runtime.jsx)(BaseModal,{...args,isOpen:open,close:()=>{setOpen(!1)}})]})},args:{isOpen:!1,close:()=>{},title:"Modal",children:"Content",confirmAction:"Confirm"}},__namedExportsOrder=["Primary"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    const [open, setOpen] = useState(false);\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx("button", {\n        onClick: () => {\n          setOpen(!open);\n        },\n        children: "Toggle Modal"\n      }), /*#__PURE__*/_jsx(BaseModal, {\n        ...args,\n        isOpen: open,\n        close: () => {\n          setOpen(false);\n        }\n      })]\n    });\n  },\n  args: {\n    isOpen: false,\n    close: () => {},\n    title: "Modal",\n    children: "Content",\n    confirmAction: "Confirm"\n  }\n}',...Primary.parameters?.docs?.source}}}}}]);